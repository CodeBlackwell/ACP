services:
  # Planning Agent
  planning:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m agents.planning.server
    ports:
      - "8001:8001"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - .:/app
      - ./state:/app/state
    restart: unless-stopped

  # Orchestrator Agent
  orchestrator:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m agents.orchestrator.server
    ports:
      - "8002:8002"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - .:/app
      - ./state:/app/state
    restart: unless-stopped
    depends_on:
      - planning
      - mcp_git_tools

  # Specification Agent
  specification:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m agents.specification.server
    ports:
      - "8005:8005"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - .:/app
      - ./state:/app/state
    restart: unless-stopped
    depends_on:
      - orchestrator
      - mcp_git_tools

  # Design Agent
  design:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m agents.design.server
    ports:
      - "8003:8003"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - .:/app
      - ./state:/app/state
    restart: unless-stopped
    depends_on:
      - specification
      - mcp_git_tools

  # Code Agent
  code:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m agents.code.server
    ports:
      - "8004:8004"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - .:/app
      - ./state:/app/state
    restart: unless-stopped
    depends_on:
      - design
      - mcp_git_tools

  # Review Agent
  review:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m agents.review.server
    ports:
      - "8006:8006"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - .:/app
      - ./state:/app/state
    restart: unless-stopped
    depends_on:
      - code
      - mcp_git_tools

  # Testing Agent
  testing:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m agents.testing.server
    ports:
      - "8007:8007"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - .:/app
      - ./state:/app/state
    restart: unless-stopped
    depends_on:
      - code
      - review
      - mcp_git_tools

  # MCP Git Tools
  mcp_git_tools:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m mcp.git_tools
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GIT_USER=${GIT_USER:-Git User}
      - GIT_EMAIL=${GIT_EMAIL:-git@example.com}
    volumes:
      - .:/app
      - ./state:/app/state
      - ~/.gitconfig:/root/.gitconfig
      - ~/.ssh:/root/.ssh
    restart: unless-stopped

  # UI (optional)
  ui:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m ui.app
    ports:
      - "8501:8501"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - .:/app
      - ./state:/app/state
    restart: unless-stopped
    depends_on:
      - planning
      - orchestrator

  # Client Runner - for testing the agents
  client:
    build:
      context: .
      dockerfile: Dockerfile
    command: python client_runner.py
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - .:/app
    depends_on:
      - planning
      - orchestrator
