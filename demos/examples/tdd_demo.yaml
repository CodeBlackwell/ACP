name: "TDD Demo - String Utilities"
description: "Demonstrates RED-YELLOW-GREEN Test-Driven Development with string utilities"
difficulty: "Intermediate"
time_estimate: "4-5 minutes"
detailed_description: |
  Experience the power of Operation Red Yellow's TDD transformation!
  
  This example demonstrates:
  â€¢ ðŸ”´ RED Phase: Write failing tests first
  â€¢ ðŸŸ¡ YELLOW Phase: Implement code to pass tests
  â€¢ ðŸŸ¢ GREEN Phase: Validate and celebrate success
  
  Features include:
  â€¢ String reversal with Unicode support
  â€¢ Palindrome detection
  â€¢ Word counting and manipulation
  â€¢ Performance optimization with caching
  â€¢ 85%+ test coverage requirement

requirements: |
  Create a StringUtilities module using strict Test-Driven Development:
  
  1. String Reversal Function:
     - Reverse any string including Unicode characters
     - Handle empty strings and None values
     - Preserve whitespace
  
  2. Palindrome Checker:
     - Check if a string is a palindrome (case-insensitive)
     - Ignore spaces and punctuation
     - Support Unicode characters
  
  3. Word Counter:
     - Count words in a string
     - Handle multiple spaces and special characters
     - Return word frequency dictionary
  
  4. Title Case Converter:
     - Convert string to title case
     - Handle contractions properly (don't â†’ Don't)
     - Preserve acronyms (USA, FBI)
  
  5. Performance Requirements:
     - All functions must execute in O(n) time or better
     - Use caching where appropriate
     - Include performance tests
  
  6. Test Requirements:
     - Write tests BEFORE implementation (RED phase)
     - Achieve 85%+ code coverage
     - Include edge cases and error handling tests
     - Add performance benchmarks

config:
  workflow_type: "tdd"
  enforce_red_phase: true
  enable_test_caching: true
  parallel_test_execution: true
  retry_with_hints: true
  test_coverage_threshold: 85
  run_tests: true
  run_integration_verification: true

expected_files:
  - string_utilities.py
  - test_string_utilities.py
  - performance_test_string_utilities.py
  - README.md
  - requirements.txt