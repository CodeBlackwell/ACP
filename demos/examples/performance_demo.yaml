name: "Performance-Optimized Data Processor"
description: "Demonstrates TDD with all performance optimizations enabled"
difficulty: "Advanced"
time_estimate: "6-8 minutes"
detailed_description: |
  Showcase the performance capabilities of Operation Red Yellow!
  
  This example demonstrates:
  â€¢ ðŸš€ Test caching with 85%+ hit rate
  â€¢ âš¡ Parallel test execution (2.8x speedup)
  â€¢ ðŸ’¾ Memory-efficient code storage
  â€¢ ðŸ”„ Streaming response handling
  â€¢ ðŸ“Š Real-time performance monitoring
  
  Build a high-performance data processing system using TDD methodology
  with all optimizations enabled.

requirements: |
  Create a high-performance DataProcessor module using TDD with performance optimizations:
  
  1. CSV Data Processor:
     - Read large CSV files efficiently (streaming)
     - Support filtering by column values
     - Aggregate data (sum, average, count)
     - Handle files up to 1GB efficiently
  
  2. Data Transformer:
     - Transform data between formats (CSV, JSON, XML)
     - Support custom transformation rules
     - Batch processing with configurable chunk size
     - Memory-efficient processing
  
  3. Parallel Data Analyzer:
     - Analyze multiple files concurrently
     - Generate statistics (mean, median, std dev)
     - Detect anomalies in datasets
     - Utilize all CPU cores efficiently
  
  4. Caching Layer:
     - Cache processed results
     - LRU eviction policy
     - Configurable cache size
     - Cache hit rate monitoring
  
  5. Performance Requirements:
     - Process 1 million rows in under 10 seconds
     - Memory usage under 500MB for 1GB files
     - Support concurrent processing of 10+ files
     - Achieve 85%+ cache hit rate
  
  6. Test Requirements:
     - Performance benchmarks for all operations
     - Load tests with large datasets
     - Memory usage tests
     - Concurrent operation tests
     - Cache effectiveness tests

config:
  workflow_type: "tdd_optimized"
  enforce_red_phase: true
  enable_test_caching: true
  parallel_test_execution: true
  retry_with_hints: true
  test_coverage_threshold: 85
  memory_spillover: true
  stream_responses: true
  run_tests: true
  run_integration_verification: true

expected_files:
  - data_processor.py
  - data_transformer.py
  - parallel_analyzer.py
  - cache_manager.py
  - test_data_processor.py
  - test_performance.py
  - benchmark_results.md
  - README.md
  - requirements.txt